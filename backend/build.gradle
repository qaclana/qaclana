apply plugin: 'war'
apply plugin: 'maven-publish'

group = 'org.qaclana'
version = "0.0.1${buildNumber}"

repositories {
    mavenCentral()
}

configurations {
    wildfly
}

dependencies {
    compile project(':shared')

    providedCompile 'javax:javaee-api:7.0'
    providedCompile 'org.jboss.logging:jboss-logging:3.3.0.Final'
    providedCompile 'org.jboss.logging:jboss-logging-annotations:2.0.1.Final'
    providedCompile 'org.jboss.logging:jboss-logging-processor:2.0.1.Final'

    wildfly "org.wildfly:wildfly-dist:10.0.0.Final@zip"

    testCompile 'junit:junit:4.12'
    testCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.1.10.Final'
    testCompile 'org.wildfly.arquillian:wildfly-arquillian-container-managed:2.0.0.Final'
    testCompile 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-api:2.2.2'
    testCompile 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-impl-maven:2.2.2'
    testCompile 'org.mockito:mockito-all:1.10.19'
}

task downloadWildfly(type: Copy) {
    outputs.dir new File(buildDir, "wildfly-10.0.0.Final")
    destinationDir = file("${project.buildDir}")
    from { zipTree(configurations.wildfly.singleFile) }
}

task sourceJar(type: War) {
    from sourceSets.main.allJava
}

task packageJavadoc(type: War, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.web

            artifact sourceJar {
                classifier "sources"
            }

            artifact packageJavadoc {
                classifier "javadoc"
            }
        }
    }
}

publishing {
    repositories {
        maven {
            if(project.version.endsWith('-SNAPSHOT')) {
                url 'https://repository.jboss.org/nexus/content/repositories/snapshots/'
            } else {
                url 'https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/'
            }
            credentials {
                username = jbossNexusUsername
                password = jbossNexusPassword
            }
        }
    }
}

test.dependsOn downloadWildfly
test.systemProperty 'java.util.logging.manager', 'org.jboss.logmanager.LogManager'
